@page "/testsets"

<div id="testsets">
    <div id="testsets-page-title">Examination Test Sets</div>
    @{ var createUrl = "testsets/view"; }
    <div id="testsets-controller">
        <div id="testsets-controller-create" @onclick="() => Manager.NavigateTo(createUrl)">
            Create Test Set
        </div>
        <div id="testsets-controller-parse" class="@("")" @onclick="ParsePDFAsync">
            Parse PDF
        </div>
        <div id="testsets-controller-import" @onclick="() => ImportTestSetAsync(CancellationToken.None)">
            Import Test Set
        </div>
    </div>

    @if (@IsLoading)
    {
        <div class="loading-menu">
            <div class="spinner"></div>
            <div class="testset-cancel-generation" @onclick="() => CancellationTokenSource.Cancel()">Cancel Generation</div>
        </div>
    }
    

    @if (this._sets.Count == 0)
    {
        <div id="testsets-page-disclaimer">You've got no examination test sets.</div>
    }
    else
    {
        <div id="testsets-list">
            @foreach (var testset in _sets)
            {
                <div class="testset" @key="testset">
                    <div class="testset-title">@testset.Title</div>
                    <div class="testset-questions-counter">@QuestionsLabel(testset.Questions.Count())</div>
                    @{ var runUrl = $"/testsets/execute/{testset.Title}";}
                    <div class="testset-run" @onclick="() => { Manager.NavigateTo(runUrl); }">Run</div>
                    @{ var updateUrl = $"/testsets/view/{testset.Title}";}
                    <div class="testset-edit" @onclick="() => Manager.NavigateTo(updateUrl)">Edit</div>
                    <div class="testset-export" @onclick="() => ExportTestSetAsync(testset, CancellationToken.None)">Export</div>
                    <div class="testset-delete" @onclick="() => DeleteTestSet(testset)">Delete</div>
                </div>
            }
        </div>
    }
</div>
