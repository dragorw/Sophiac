@page "/testruns/view/{TestSetFileName?}"
@using Sophiac.Domain.Answers;

<div id="run">
    <div id="run-title">@_run.Title</div>
    <div id="run-time">Started: @_run.Time.ToLocalTime()</div>
    <div id="run-points">Points: @_run.Entries.Sum(it => it.Answer.Points) out of @(_run.Entries.Sum(it => it.Question.GetMaximumPoints()))</div>
    <div id="run-entries">
        @foreach (var entry in _run.Entries)
        {
            <div class="entry" @key="entry">
                <div class="entry-question-title">@entry.Question.Title</div>
                <div class="entry-question-description">@entry.Question.Description</div>
                @switch (entry.Answer)
                {
                    case SingleChoiceAnswer singleChoiceAnswer:
                        <div class="entry-question-answers">
                            <div class="entry-question-answer">
                                @(singleChoiceAnswer.Content)
                            </div>
                        </div>
                        break;
                    case MultipleChoicesAnswer multipleChoicesAnswer:
                        <div class="entry-question-answers">
                            <div class="entry-question-answer">
                                @(multipleChoicesAnswer.Content.Select(it => it.Content).Aggregate((left, right) => $"{left}, {right}"))
                            </div>
                        </div>
                        break;
                    case MappingAnswer mappingAnswer:
                        <div class="entry-question-answers">
                            @foreach (var pair in mappingAnswer.Content)
                            {
                                <div class="entry-question-answer">
                                    @(pair.Source) - @(pair.Destination)
                                </div>
                            }
                        </div>
                        break;
                }
                @if (entry.HasBeenSkipped)
                {
                    <div class="entry-question-disclaimer">The question has been skipped.</div>
                }
                else
                {
                    <div class="entry-question-points">@entry.Answer.Points out of @(entry.Question.GetMaximumPoints())</div>
                }
                <div class="entry-question-span">Time spent on a question: @(Convert.ToInt32(entry.AnswerSpan.TotalSeconds)) @(entry.AnswerSpan.TotalSeconds > 1 ? "seconds" : "second")</div>
            </div>
        }
    </div>
</div>
